[tool.poetry]
name = "vadi"
version = "0.0.5"
description = "REPL of a simple, interpreted and statically-typed programming language."
authors = ["Shivam Shandilya <fvyogami@gmail.com>"]
repository = "https://github.com/vyogami/Vadi"
documentation = "https://github.com/vyogami/Vadi/blob/main/CONTRIBUTING.md"
readme = "README.md"
packages = [
  { include = "vadi", from = "src" },
  { include = "vadi/py.typed", from = "src" },
  { include = "utils", from = "src" },
  { include = "utils/py.typed", from = "src" },
]

[tool.poetry.dependencies]
python = ">=3.8,<4.0"
rich = "^13.7.1"
prompt-toolkit = "^3.0.43"

[tool.poetry.group.dev.dependencies]
pytest = "^7.2.0"
pytest-cov = "^4.0.0"
deptry = "^0.12.0"
mypy = "^1.5.1"
pre-commit = "^3.4.0"
tox = "^4.11.1"

[tool.poetry.scripts]
vadi = "vadi.repl:main"

[tool.deptry]
ignore = ["DEP001", "DEP003"]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.mypy]
files = ["src/vadi"]
disallow_untyped_defs = true
disallow_any_unimported = true
ignore_missing_imports = true
no_implicit_optional = true
check_untyped_defs = true
warn_return_any = true
show_error_codes = true

[tool.pytest.ini_options]
testpaths = ["tests"]

[tool.ruff]
target-version = "py37"
line-length = 120
fix = true
select = [
  # flake8-2020
  "YTT",
  # flake8-bandit
  "S",
  # flake8-bugbear
  "B",
  # flake8-builtins
  "A",
  # flake8-comprehensions
  "C4",
  # flake8-debugger
  "T10",
  # flake8-simplify
  "SIM",
  # isort
  "I",
  # mccabe
  "C90",
  # pycodestyle
  "E",
  "W",
  # pyflakes
  "F",
  # pygrep-hooks
  "PGH",
  # pyupgrade
  "UP",
  # ruff
  "RUF",
  # tryceratops
  "TRY",
]
ignore = [
  # LineTooLong
  "E501",
  # DoNotAssignLambda
  "E731",
  # MutableClassDefault
  "RUF012",
  # builtinArgumentShadowing
  "A002",
  # blanketTypeIgnore
  "PGH003"
]

[tool.ruff.format]
preview = true

[tool.coverage.report]
skip_empty = true

[tool.coverage.run]
branch = true
source = ["vadi"]

[tool.ruff.per-file-ignores]
"tests/*" = ["S101"]
